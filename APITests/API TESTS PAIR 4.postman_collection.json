{
	"info": {
		"_postman_id": "97deb4d3-00f2-490d-9b6e-84715a0ef5ba",
		"name": "API TESTS PAIR 4",
		"description": "## API TEST KOLEKSİYONU",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32036532"
	},
	"item": [
		{
			"name": "Account",
			"item": [
				{
					"name": "POST Address",
					"item": [
						{
							"name": "Country",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Almanya\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Countries",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Countries"
									]
								}
							},
							"response": [
								{
									"name": "Add Country, Türkiye",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Türkiye\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Countries",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Countries"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:39:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"name\": \"Türkiye\",\n    \"priority\": 1,\n    \"visibility\": true\n}"
								}
							]
						},
						{
							"name": "City",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"countryId\": 1,\n  \"name\": \"Adana\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Cities?PageIndex=1&PageSize=10",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Cities"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "1"
										},
										{
											"key": "PageSize",
											"value": "10"
										}
									]
								}
							},
							"response": [
								{
									"name": "Add City, Adana",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryId\": 1,\n  \"name\": \"Adana\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Cities?PageIndex=1&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Cities"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "1"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:42:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"countryId\": 1,\n    \"name\": \"Adana\",\n    \"priority\": 1,\n    \"visibility\": true\n}"
								}
							]
						},
						{
							"name": "Districtd",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cityId\": 1,\n  \"name\": \"Ceyhan\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Districts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Districts"
									]
								}
							},
							"response": [
								{
									"name": "Add District, Ceyhan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cityId\": 1,\n  \"name\": \"Ceyhan\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Districts",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Districts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:45:08 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"cityId\": 1,\n    \"name\": \"Ceyhan\",\n    \"priority\": 1,\n    \"visibility\": true\n}"
								}
							]
						},
						{
							"name": "Success Adress",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": 1,\n  \"countryId\": 1,\n  \"cityId\": 1,\n  \"districtId\": 1,\n  \"addressDetail\": \"Mahalle/Sokak\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Addresses",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Addresses"
									]
								}
							},
							"response": [
								{
									"name": "Admin address",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"countryId\": 1,\n  \"cityId\": 1,\n  \"districtId\": 1,\n  \"addressDetail\": \"Mahalle/Sokak\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Addresses",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Addresses"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:53:13 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"accountId\": 1,\n    \"countryId\": 1,\n    \"cityId\": 1,\n    \"districtId\": 1,\n    \"addressDetail\": \"Mahalle/Sokak\"\n}"
								}
							]
						},
						{
							"name": "Unsuccess Address",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": 1,\n  \"countryId\": 0,\n  \"cityId\": 0,\n  \"districtId\": 0,\n  \"addressDetail\": \" \"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Addresses",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Addresses"
									]
								}
							},
							"response": [
								{
									"name": "Boş bırakıldığında",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"countryId\": 0,\n  \"cityId\": 0,\n  \"districtId\": 0,\n  \"addressDetail\": \" \"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Addresses",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Addresses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:49:34 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- CountryId: 'Country Id' boş olmamalı.\r\n -- CityId: 'City Id' boş olmamalı.\r\n -- DistrictId: 'District Id' boş olmamalı.\r\n -- AddressDetail: 'Address Detail' boş olmamalı.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.AddressesController.Add(CreateAddressCommand createAddressCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\AddressesController.cs:line 19\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 96\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 091aef6e-2786-4c7a-aa74-75bdf880d2ed\r\n"
								}
							]
						},
						{
							"name": "Adress Update",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"accountId\": 1,\n  \"countryId\": 1,\n  \"cityId\": 1,\n  \"districtId\": 1,\n  \"addressDetail\": \"200 den fazlaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Addresses",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Addresses"
									]
								}
							},
							"response": [
								{
									"name": "200 fazla Mahalle/Sokak",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"accountId\": 1,\n  \"countryId\": 1,\n  \"cityId\": 1,\n  \"districtId\": 1,\n  \"addressDetail\": \"200 den fazlaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Addresses",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Addresses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 20:56:57 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- AddressDetail: 'Address Detail', 200 karakterden küçük veya eşit olmalıdır. 1332 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.AddressesController.Update(UpdateAddressCommand updateAddressCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\AddressesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 1438\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 1adaf538-6026-49b7-b2ca-3975fa7f0853\r\n"
								}
							]
						},
						{
							"name": "Unsuccess Country",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \" \",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Countries",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Countries"
									]
								}
							},
							"response": [
								{
									"name": "2 karakterden az",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"name\": \"T\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Countries",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Countries"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 21:07:10 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name', 2 karakterden büyük veya eşit olmalıdır. 1 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.CountriesController.Update(UpdateCountryCommand updateCountryCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\CountriesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 67\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 79f6c525-90c3-4f2d-9217-4ef6727cdeae\r\n"
								},
								{
									"name": "30 karakterden fazla olmamalı",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"name\": \"Türkiyeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Countries",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Countries"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 21:09:57 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name', 30 karakterden küçük veya eşit olmalıdır. 104 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.CountriesController.Update(UpdateCountryCommand updateCountryCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\CountriesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 171\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 6204e547-7582-4baf-9759-012f6d79df85\r\n"
								},
								{
									"name": "Boş bırakıldığında",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"name\": \" \",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Countries",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Countries"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:28:21 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name' boş olmamalı.\r\n'Name', 2 karakterden büyük veya eşit olmalıdır. 1 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.CountriesController.Update(UpdateCountryCommand updateCountryCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\CountriesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nContent-Length: 67\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: cac1ca87-1578-4f9c-8646-8f614484ac1f\r\n"
								}
							]
						},
						{
							"name": "Unsuccess City",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"countryId\": 1,\n  \"name\": \"Adana\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Cities",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Cities"
									]
								}
							},
							"response": [
								{
									"name": "Boş bırakıldığında",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"countryId\": 1,\n  \"name\": \" \",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Cities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Cities"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:32:26 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name' boş olmamalı.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.CitiesController.Update(UpdateCityCommand updateCityCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\CitiesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nContent-Length: 85\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 9b9e523b-184d-4fbc-b8c6-0187c6c9a2e4\r\n"
								},
								{
									"name": "30 Karakterden fazla olmamalı",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"countryId\": 1,\n  \"name\": \"ADANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Cities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Cities"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:34:16 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name', 30 karakterden küçük veya eşit olmalıdır. 193 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.CitiesController.Update(UpdateCityCommand updateCityCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\CitiesController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nContent-Length: 277\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 65d7edb3-a4af-4d0e-a174-1c36c4cebcd5\r\n"
								},
								{
									"name": "1 Karakter Bug",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"countryId\": 1,\n  \"name\": \"A\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Cities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Cities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:35:03 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"countryId\": 1,\n    \"name\": \"A\",\n    \"priority\": 1,\n    \"visibility\": true\n}"
								}
							]
						},
						{
							"name": "Unsuccess District",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"1\",\n  \"cityId\": \"1\",\n  \"name\": \" \",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Districts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Districts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"cityId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"visibility\": \"<boolean>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Districts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Districts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "30 karakterden fazla olmamalı",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"1\",\n  \"cityId\": \"1\",\n  \"name\": \"Ceyhaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Districts",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Districts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Feb 2024 21:03:28 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name', 30 karakterden küçük veya eşit olmalıdır. 89 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at WebAPI.Controllers.DistrictsController.Update(UpdateDistrictCommand updateDistrictCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\DistrictsController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 174\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 4047ccaf-de85-4581-9d82-8ac9ec7bd1bb\r\n"
								},
								{
									"name": "Boş Bırakıldığında",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"1\",\n  \"cityId\": \"1\",\n  \"name\": \" \",\n  \"priority\": 1,\n  \"visibility\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Districts",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Districts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:29:46 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Name: 'Name' boş olmamalı.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at WebAPI.Controllers.DistrictsController.Update(UpdateDistrictCommand updateDistrictCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\DistrictsController.cs:line 27\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nContent-Length: 86\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 5814cbc2-35ae-4c9f-8331-24ff5e94f831\r\n"
								}
							]
						}
					]
				},
				{
					"name": "Success Account Add",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 1,\n  \"nationalIdentificationNumber\": \"12345678906\",\n  \"aboutMe\": \"About Me\",\n  \"birthDate\": \"2021-02-21\",\n  \"phoneNumber\": \"543 240-4742\",\n  \"profilePhotoPath\": \" \",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Accounts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Accounts"
							]
						}
					},
					"response": [
						{
							"name": "Account for Admin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": 1,\n  \"nationalIdentificationNumber\": \"12345678906\",\n  \"aboutMe\": \"About Me\",\n  \"birthDate\": \"2021-02-21\",\n  \"phoneNumber\": \"543 240-4742\",\n  \"profilePhotoPath\": \" \",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Accounts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Feb 2024 20:14:30 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"userId\": 1,\n    \"nationalIdentificationNumber\": \"12345678906\",\n    \"aboutMe\": \"About Me\",\n    \"birthDate\": \"2021-02-21T00:00:00\",\n    \"phoneNumber\": \"543 240-4742\",\n    \"profilePhotoPath\": \" \",\n    \"shareProfile\": true,\n    \"profileLinkUrl\": \"string\",\n    \"isActive\": true\n}"
						}
					]
				},
				{
					"name": "Unsuccess Account Add",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 1,\n  \"nationalIdentificationNumber\": \" \",\n  \"aboutMe\": \" \",\n  \"birthDate\": \"2021-02-21\",\n  \"phoneNumber\": \"05442404742\",\n  \"profilePhotoPath\": \" \",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Accounts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Accounts"
							]
						}
					},
					"response": [
						{
							"name": "Başarısız Kişisel Bilgi Ekleme",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": 1,\n  \"nationalIdentificationNumber\": \" \",\n  \"aboutMe\": \" \",\n  \"birthDate\": \"2021-02-21\",\n  \"phoneNumber\": \" \",\n  \"profilePhotoPath\": \" \",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Accounts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Feb 2024 20:16:58 GMT"
								}
							],
							"cookie": [],
							"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- NationalIdentificationNumber: 'National Identification Number' boş olmamalı.\r\n'National Identification Number', 11 karakter uzunluğunda olmalı. 1 adet karakter girdiniz.\r\n'National Identification Number' değerinin formatı doğru değil.\r\n -- AboutMe: 'About Me' boş olmamalı.\r\n -- PhoneNumber: 'Phone Number' boş olmamalı.\r\n'Phone Number', 12 karakter uzunluğunda olmalı. 1 adet karakter girdiniz.\r\n'Phone Number' değerinin formatı doğru değil.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.AccountsController.Add(CreateAccountCommand createAccountCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\AccountsController.cs:line 29\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 226\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 8687390b-d88a-49e7-adaf-e9f5c6184c82\r\n"
						},
						{
							"name": "bir kullanıcı bir account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": 1,\n  \"nationalIdentificationNumber\": \"12345678906\",\n  \"aboutMe\": \"Aboutttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\",\n  \"birthDate\": \"2021-02-21\",\n  \"phoneNumber\": \"543 240-4742\",\n  \"profilePhotoPath\": \"string\",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Accounts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Feb 2024 20:22:17 GMT"
								}
							],
							"cookie": [],
							"body": "Core.CrossCuttingConcerns.Exceptions.Types.BusinessException: Bir kullanıcı birden fazla hesaba sahip olamaz.\r\n   at Application.Features.Accounts.Rules.AccountBusinessRules.IsUserAlreadyLinkedToAccount(Account account) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\Application\\Features\\Accounts\\Rules\\AccountBusinessRules.cs:line 43\r\n   at Application.Features.Accounts.Commands.Create.CreateAccountCommand.CreateAccountCommandHandler.Handle(CreateAccountCommand request, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\Application\\Features\\Accounts\\Commands\\Create\\CreateAccountCommand.cs:line 51\r\n   at Core.Application.Pipelines.Transaction.TransactionScopeBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Transaction\\TransactionScopeBehavior.cs:line 15\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 34\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.AccountsController.Add(CreateAccountCommand createAccountCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\AccountsController.cs:line 29\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDczMjc2NzYsImV4cCI6MTcwNzM3MDg3NiwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.Y_Hb0R7wRX-r8J_46LtJrw-_FLouviepaks75p3GMUEHFdZ3-XZ7aJcf8_8jz6ZvQ-DMZIrxE_5I7LaH4Vf6IQ\r\nConnection: keep-alive\r\nContent-Length: 871\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: c40a6f1a-5b91-46af-90d7-8bb3bfb60b65\r\n"
						}
					]
				},
				{
					"name": "Başarısız Güncelleme",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"aboutMe\": \"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\",\n  \"birthDate\": \"2024-02-07T20:24:12.261Z\",\n  \"phoneNumber\": \"544 345-2323\",\n  \"profilePhotoPath\": \"string\",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true,\n  \"userIdForCheck\": 1\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Accounts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Accounts"
							]
						}
					},
					"response": [
						{
							"name": "300 About me bug",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"aboutMe\": \"300 den fazla aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\",\n  \"birthDate\": \"2024-02-07T20:24:12.261Z\",\n  \"phoneNumber\": \"544 345-2323\",\n  \"profilePhotoPath\": \"string\",\n  \"shareProfile\": true,\n  \"profileLinkUrl\": \"string\",\n  \"isActive\": true,\n  \"userIdForCheck\": 1\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Accounts",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Feb 2024 20:59:56 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"userId\": 1,\n    \"nationalIdentificationNumber\": \"12345678906\",\n    \"aboutMe\": \"300 den fazla aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\",\n    \"birthDate\": \"2024-02-07T20:24:12.261Z\",\n    \"phoneNumber\": \"544 345-2323\",\n    \"profilePhotoPath\": \"string\",\n    \"shareProfile\": true,\n    \"profileLinkUrl\": \"string\",\n    \"isActive\": true\n}"
						}
					]
				}
			],
			"description": "# Kişisel Bilgilerim Güncelleme Senaryosu API Testleri"
		},
		{
			"name": "AccountCertificates",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "/api/AccountCertificates/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/AccountCertificates/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountCertificates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AccountCertificates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountCertificates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/AccountCertificates/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/AccountCertificates/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountCertificates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AccountCertificates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountCertificates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "/api/AccountCertificates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": 1,\n  \"certificateId\":1,\n  \"priority\": 1\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/AccountCertificates",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountCertificates"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": \"<integer>\",\n  \"certificateId\": \"<integer>\",\n  \"priority\": \"<integer>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountCertificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountCertificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "SilinmişSertifikayıKullanıcıyaTanımlama",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//Silinmiş olan sertifikayı kullanıcıya tanımlama kontrolü yapılmıştır.\n//Kullanıcıya silinmiş sertifika yapılmıştır.Veri tutarsızlığına ve karmaşasına yol açabilir.\n{\n  \"accountId\": 1,\n  \"certificateId\":13,\n  \"priority\": 1\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/AccountCertificates",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountCertificates"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/AccountCertificates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 2,\n  \"accountId\": 1,\n  \"certificateId\": 4,\n  \"priority\": 1\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/AccountCertificates",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountCertificates"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"accountId\": \"<integer>\",\n  \"certificateId\": \"<integer>\",\n  \"priority\": \"<integer>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountCertificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountCertificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/AccountCertificates",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/AccountCertificates?PageIndex=0&PageSize=20",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountCertificates"
							],
							"query": [
								{
									"key": "PageIndex",
									"value": "0"
								},
								{
									"key": "PageSize",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AccountCertificates?PageIndex=<integer>&PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountCertificates"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "<integer>"
										},
										{
											"key": "PageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "AccountSocialMediaPlatforms",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "/api/AccountSocialMediaPlatforms/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AccountSocialMediaPlatforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountSocialMediaPlatforms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/AccountSocialMediaPlatforms/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AccountSocialMediaPlatforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountSocialMediaPlatforms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "/api/AccountSocialMediaPlatforms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"<integer>\",\n  \"socialMediaPlatformId\": \"<integer>\",\n  \"priority\": \"<integer>\",\n  \"link\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountSocialMediaPlatforms"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": \"<integer>\",\n  \"socialMediaPlatformId\": \"<integer>\",\n  \"priority\": \"<integer>\",\n  \"link\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountSocialMediaPlatforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "3denfazlahesapeklemekontrolü",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//3den fazla hesap eklenme kontrolü yapılmıştır.\n//En fazla 3 adet sosyal medya hesabı eklenebilir.Uyarısı dönmektedir.\n{\n  \"accountId\": 1,\n  \"socialMediaPlatformId\": 5,\n  \"priority\": 1,\n  \"link\": \"https://www.linkedin.com/company/tobeto/\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "EşleşmeyenPlatformveLinkKontrol",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//Twitter id si verilmesine rağmen linkedin linki eklemeyi denenmesi halinde başarıyla eklendi.\n//Bu da veri tutarsızlığına yol açmaktadır.\n{\n  \"accountId\": 1,\n  \"socialMediaPlatformId\": 2,\n  \"priority\": 1,\n  \"link\": \"https://www.linkedin.com/company/tobeto/\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "PlatformveLinkBosBirakmaKontrolu",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//Platform ve link belirtmeden boş bırakılarak ekleme kontrolü yapılmıştır.\n//'Social Media Platform Id' boş olmamalı. Link: 'Link' boş olmamalı. Uyarısı vermektedir ve ekleme yapmamaktadır.\n{\n  \"accountId\": 1,\n  \"socialMediaPlatformId\": 0,\n  \"priority\": 1,\n  \"link\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/AccountSocialMediaPlatforms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Sosyal medya linkini veya platform seçimini güncelleme\n//Bşarıyla güncelleme işlemi gerçekleşiyor.\n{\n  \"id\": 3,\n  \"accountId\": 1,\n  \"socialMediaPlatformId\": 2, \n  \"priority\": 1,\n  \"link\": \"https://www.linkedin.com/company/tobeto/\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountSocialMediaPlatforms"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"accountId\": \"<integer>\",\n  \"socialMediaPlatformId\": \"<integer>\",\n  \"priority\": \"<integer>\",\n  \"link\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountSocialMediaPlatforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/AccountSocialMediaPlatforms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/AccountSocialMediaPlatforms?PageIndex=0&PageSize=20",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"AccountSocialMediaPlatforms"
							],
							"query": [
								{
									"key": "PageIndex",
									"value": "0"
								},
								{
									"key": "PageSize",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AccountSocialMediaPlatforms?PageIndex=<integer>&PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountSocialMediaPlatforms"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "<integer>"
										},
										{
											"key": "PageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Certificates",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "/api/Certificates/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"id\": 13\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Certificates/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Certificates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Certificates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Certificates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Silinensertifikatekrarsilme",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "//Silinen Sertifika tekrarsilme kontrolü yapılmıştır.\r\n//Certificate not exists.uyarısı dönmektedir.\r\n{\r\n\"id\": 6\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Certificates/6",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Certificates",
												"6"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Certificates/:id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Certificates/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Certificates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Certificates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Certificates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "/api/Certificates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sunum Teknikleri\",\n  \"path\": \"string\",\n  \"priority\": 1\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Certificates",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Certificates"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Certificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "isimsizsertifikaekleme",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//İsimsiz sertifika ekleme kontrolü yapılmıştır.\n//'Name' boş olmamalı.Uyarısı dönmektedir.\n{\n  \"name\": \"\",\n  \"path\": \"string\",\n  \"priority\": 1\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Certificates",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Certificates"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Karakteruzunluğukontrolü",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//Sertifika ismi karakter uzunluğu kontrolü yapılmıştır.\n//'Name', 30 karakterden küçük veya eşit olmalıdır. 54 karakter girdiniz. Uyarısı dönmektedir.\n{\n  \"name\": \"TobetoTobetoTobetoTobetoTobetoTobetoTobetoTobetoTobeto\",\n  \"path\": \"string\",\n  \"priority\": 1\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Certificates",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Certificates"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/Certificates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 4,\n  \"name\": \"Yazılım Kalite ve Test\",\n  \"path\": \"string\",\n  \"priority\": 1\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Certificates",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Certificates"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Certificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/Certificates",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/Certificates?PageIndex=0&PageSize=20",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"Certificates"
							],
							"query": [
								{
									"key": "PageIndex",
									"value": "0"
								},
								{
									"key": "PageSize",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Certificates?PageIndex=<integer>&PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Certificates"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "<integer>"
										},
										{
											"key": "PageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Experiences",
			"item": [
				{
					"name": "Get Experience",
					"item": [
						{
							"name": "Get Deneyimler",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Get request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=100",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "0"
										},
										{
											"key": "PageSize",
											"value": "100"
										}
									]
								}
							},
							"response": [
								{
									"name": "İlk Get",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:35:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 0,\n    \"pages\": 0,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "Post Experience",
					"item": [
						{
							"name": "Success Experience Add",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"pm.test(\"Set postExperienceId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    //pm.expect(jsonData.value).to.eql(100);\r",
											"    pm.environment.set(\"postExperienceId\", jsonData.id);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"Tobeto\",\n  \"jobTitle\": \"Software QA&Test Engineer\",\n  \"industry\": \"Yazılım\",\n  \"startingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2024-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"string\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Experiences",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences"
									]
								}
							},
							"response": [
								{
									"name": "Admin 1",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"Tobeto\",\n  \"jobTitle\": \"Software QA&Test Engineer\",\n  \"industry\": \"Yazılım\",\n  \"startingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2023-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"string\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:46:43 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"accountId\": 1,\n    \"cityId\": 1,\n    \"companyName\": \"Tobeto\",\n    \"jobTitle\": \"Software QA&Test Engineer\",\n    \"industry\": \"Yazılım\",\n    \"startingDate\": \"2021-02-09T09:41:41.133Z\",\n    \"endingDate\": \"2023-02-09T09:41:41.133Z\",\n    \"isCurrentlyWorking\": true,\n    \"description\": \"string\",\n    \"isActive\": true\n}"
								},
								{
									"name": "Admin 2",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"  Etiya\",\n  \"jobTitle\": \"Software QA&Test Engineer\",\n  \"industry\": \"Yazılım\",\n  \"startingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2023-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"string\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:47:55 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 2,\n    \"accountId\": 1,\n    \"cityId\": 1,\n    \"companyName\": \"  Etiya\",\n    \"jobTitle\": \"Software QA&Test Engineer\",\n    \"industry\": \"Yazılım\",\n    \"startingDate\": \"2021-02-09T09:41:41.133Z\",\n    \"endingDate\": \"2023-02-09T09:41:41.133Z\",\n    \"isCurrentlyWorking\": true,\n    \"description\": \"string\",\n    \"isActive\": true\n}"
								},
								{
									"name": "Admin 3",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": 1,\n    \"cityId\": 1,\n    \"companyName\": \"Testinium\",\n    \"jobTitle\": \"Software QA&Test Engineer\",\n    \"industry\": \"Yazılım\",\n    \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n    \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n    \"isCurrentlyWorking\": true,\n    \"description\": \"string\",\n    \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:48:47 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 3,\n    \"accountId\": 1,\n    \"cityId\": 1,\n    \"companyName\": \"Testinium\",\n    \"jobTitle\": \"Software QA&Test Engineer\",\n    \"industry\": \"Yazılım\",\n    \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n    \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n    \"isCurrentlyWorking\": true,\n    \"description\": \"string\",\n    \"isActive\": true\n}"
								}
							]
						},
						{
							"name": "Experiences after Post1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful GET last POST Deneyim\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    //pm.expect((jsonData.count)+1).to.eql(pm.environment.get(\"postExperienceId\"));\r",
											"    pm.expect(_.last(jsonData.items).id).to.eql(pm.environment.get(\"postExperienceId\"));\r",
											"    console.log(pm.environment.get(\"postExperienceId\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=100",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "0"
										},
										{
											"key": "PageSize",
											"value": "100"
										}
									]
								}
							},
							"response": [
								{
									"name": "İlk Get",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:35:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 0,\n    \"pages\": 0,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								}
							]
						},
						{
							"name": "Unsuccess Experience Add",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Unsuccessful POST request\", function () {\r",
											"    \r",
											"    if( pm.response.code == 200 || pm.response.code == 201){\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.environment.set(\"unsuccessfulExperienceId\", jsonData.id);\r",
											"    }\r",
											"    pm.expect(pm.response.code).to.be.oneOf([500]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"To\",\n  \"jobTitle\": \"Soft\",\n  \"industry\": \"Yaz\",\n  \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"string\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/Experiences",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences"
									]
								}
							},
							"response": [
								{
									"name": "Boş bırakıldığında",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 0,\n  \"companyName\": \" \",\n  \"jobTitle\": \" \",\n  \"industry\": \" \",\n  \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \" \",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:52:34 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- CityId: 'City Id' boş olmamalı.\r\n -- CompanyName: 'Company Name' boş olmamalı.\r\n -- JobTitle: 'Job Title' boş olmamalı.\r\n -- Industry: 'Industry' boş olmamalı.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.ExperiencesController.Add(CreateExperienceCommand createExperienceCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\ExperiencesController.cs:line 19\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nContent-Length: 264\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: dd611a29-a3dc-439f-9f47-ccb7455a305a\r\n"
								},
								{
									"name": "En az 5 Karakter bug",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"To\",\n  \"jobTitle\": \"Soft\",\n  \"industry\": \"Yaz\",\n  \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"string\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:55:15 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 4,\n    \"accountId\": 1,\n    \"cityId\": 1,\n    \"companyName\": \"To\",\n    \"jobTitle\": \"Soft\",\n    \"industry\": \"Yaz\",\n    \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n    \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n    \"isCurrentlyWorking\": true,\n    \"description\": \"string\",\n    \"isActive\": true\n}"
								},
								{
									"name": "300 den fazla",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountId\": 1,\n  \"cityId\": 1,\n  \"companyName\": \"Tobeto\",\n  \"jobTitle\": \"Software QA & Test Engineer\",\n  \"industry\": \"Yazılım\",\n  \"startingDate\": \"2019-02-09T09:41:41.133Z\",\n  \"endingDate\": \"2021-02-09T09:41:41.133Z\",\n  \"isCurrentlyWorking\": true,\n  \"description\": \"300 den fazlaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/Experiences",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Feb 2024 08:24:37 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.ValidationException: Validation failed: \r\n -- Description: 'Description', 300 karakterden küçük veya eşit olmalıdır. 1356 karakter girdiniz.\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 33\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.ExperiencesController.Add(CreateExperienceCommand createExperienceCommand) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\ExperiencesController.cs:line 19\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc4OTg4MjksImV4cCI6MTcwNzk0MjAyOSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.16N6jCcl1Ds9kf8YzFDvW9RCD4AFE3igZwcfJOEw0gi3bGDY_MtMyPh5tevnMj3zsHSpkaocewj3yauT4c634w\r\nConnection: keep-alive\r\nContent-Length: 1651\r\nContent-Type: application/json\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.3\r\nPostman-Token: 7d3c7860-acc3-4121-8d15-4b11d194a351\r\n"
								}
							]
						},
						{
							"name": "Experinces after Post2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=100",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "0"
										},
										{
											"key": "PageSize",
											"value": "100"
										}
									]
								}
							},
							"response": [
								{
									"name": "İlk Get",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:35:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 0,\n    \"pages\": 0,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "Delete Experience",
					"item": [
						{
							"name": "Experience",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/Experiences/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"Experiences",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{unsuccessfulExperienceId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Admin 1",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences/:id",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 09:59:39 GMT"
										}
									],
									"cookie": [],
									"body": "Core.CrossCuttingConcerns.Exceptions.Types.BusinessException: Experience not exists.\r\n   at Application.Features.Experiences.Rules.ExperienceBusinessRules.ExperienceShouldExistWhenSelected(Experience experience) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\Application\\Features\\Experiences\\Rules\\ExperienceBusinessRules.cs:line 22\r\n   at Application.Features.Experiences.Commands.Delete.DeleteExperienceCommand.DeleteExperienceCommandHandler.Handle(DeleteExperienceCommand request, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\Application\\Features\\Experiences\\Commands\\Delete\\DeleteExperienceCommand.cs:line 44\r\n   at Core.Application.Pipelines.Transaction.TransactionScopeBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Transaction\\TransactionScopeBehavior.cs:line 15\r\n   at Core.Application.Pipelines.Validation.RequestValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Validation\\RequestValidationBehavior.cs:line 34\r\n   at Core.Application.Pipelines.Logging.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Logging\\LoggingBehavior.cs:line 38\r\n   at Core.Application.Pipelines.Caching.CacheRemovingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Caching\\CacheRemovingBehavior.cs:line 26\r\n   at Core.Application.Pipelines.Authorization.AuthorizationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\corePackages\\Core.Application\\Pipelines\\Authorization\\AuthorizationBehavior.cs:line 35\r\n   at WebAPI.Controllers.ExperiencesController.Delete(Int32 id) in C:\\Users\\Kubra\\source\\repos\\Yeni_TobetoPlatformCleanArchitecture\\src\\tobetoPlatformCleanArchitecture\\WebAPI\\Controllers\\ExperiencesController.cs:line 35\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAuthorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJBZG1pbiBOQXJjaGl0ZWN0dXJlIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQWRtaW4iLCJuYmYiOjE3MDc0NzA1NTksImV4cCI6MTcwNzUxMzc1OSwiaXNzIjoibkFyY2hpdGVjdHVyZUBrb2RsYW1hLmlvIiwiYXVkIjoic3RhcnRlclByb2plY3RAa29kbGFtYS5pbyJ9.SmP0JMdyR49HzROwvKWf7-LazK9mx2OI-avae9gap_-2DtxI7PFQIzMEMhsM44xqmfJvpqYr80fGGCE6IMsVIA\r\nConnection: keep-alive\r\nHost: localhost:60805\r\nUser-Agent: PostmanRuntime/7.36.1\r\nPostman-Token: 41e4ea60-e03f-4557-8d89-e5b37af81d96\r\n"
								},
								{
									"name": "Get Deneyimler",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 09 Feb 2024 10:42:29 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"accountId\": 1,\n            \"cityId\": 1,\n            \"companyName\": \"  Etiya\",\n            \"jobTitle\": \"Software QA&Test Engineer\",\n            \"industry\": \"Yazılım\",\n            \"startingDate\": \"2021-02-09T09:41:41.133\",\n            \"endingDate\": \"2023-02-09T09:41:41.133\",\n            \"isCurrentlyWorking\": true,\n            \"description\": \"string\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 3,\n            \"accountId\": 1,\n            \"cityId\": 1,\n            \"companyName\": \"Testinium\",\n            \"jobTitle\": \"Software QA&Test Engineer\",\n            \"industry\": \"Yazılım\",\n            \"startingDate\": \"2019-02-09T09:41:41.133\",\n            \"endingDate\": \"2021-02-09T09:41:41.133\",\n            \"isCurrentlyWorking\": true,\n            \"description\": \"string\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 4,\n            \"accountId\": 1,\n            \"cityId\": 1,\n            \"companyName\": \"To\",\n            \"jobTitle\": \"Soft\",\n            \"industry\": \"Yaz\",\n            \"startingDate\": \"2019-02-09T09:41:41.133\",\n            \"endingDate\": \"2021-02-09T09:41:41.133\",\n            \"isCurrentlyWorking\": true,\n            \"description\": \"string\",\n            \"isActive\": true\n        }\n    ],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 3,\n    \"pages\": 1,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								},
								{
									"name": "Admin 4",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences/:id",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "4"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:26:29 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 4\n}"
								},
								{
									"name": "Get Deneyimler",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:27:03 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"accountId\": 1,\n            \"cityId\": 1,\n            \"companyName\": \"  Etiya\",\n            \"jobTitle\": \"Software QA&Test Engineer\",\n            \"industry\": \"Yazılım\",\n            \"startingDate\": \"2021-02-09T09:41:41.133\",\n            \"endingDate\": \"2023-02-09T09:41:41.133\",\n            \"isCurrentlyWorking\": true,\n            \"description\": \"string\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 3,\n            \"accountId\": 1,\n            \"cityId\": 1,\n            \"companyName\": \"Testinium\",\n            \"jobTitle\": \"Software QA&Test Engineer\",\n            \"industry\": \"Yazılım\",\n            \"startingDate\": \"2019-02-09T09:41:41.133\",\n            \"endingDate\": \"2021-02-09T09:41:41.133\",\n            \"isCurrentlyWorking\": true,\n            \"description\": \"string\",\n            \"isActive\": true\n        }\n    ],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 2,\n    \"pages\": 1,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								},
								{
									"name": "Admin 5",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences/:id",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:38:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 5\n}"
								},
								{
									"name": "Get Deneyimler",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:39:12 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 0,\n    \"pages\": 0,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								}
							]
						},
						{
							"name": "Experiences after DEL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Unsuccessful Experience id is DELETED\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    //pm.expect(jsonData.id).not.to.eql(pm.environment.get(\"postExperienceId\"));\r",
											"    pm.expect(jsonData.id).not.to.eql(pm.environment.get(\"unsuccessfulExperienceId\"));\r",
											"    \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:60805/api/Experiences?PageIndex=0&PageSize=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "60805",
									"path": [
										"api",
										"Experiences"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "0"
										},
										{
											"key": "PageSize",
											"value": "10"
										}
									]
								}
							},
							"response": [
								{
									"name": "İlk Get",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/Experiences?PageIndex=0&PageSize=10",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"Experiences"
											],
											"query": [
												{
													"key": "PageIndex",
													"value": "0"
												},
												{
													"key": "PageSize",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Feb 2024 09:35:23 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"index\": 0,\n    \"size\": 10,\n    \"count\": 0,\n    \"pages\": 0,\n    \"hasPrevious\": false,\n    \"hasNext\": false\n}"
								}
							]
						}
					]
				}
			],
			"description": "# **Deneyimlerim Ekleme/Silme Senaryosu API Testleri**"
		},
		{
			"name": "SocialMediaPlatforms",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "/api/SocialMediaPlatforms/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/SocialMediaPlatforms/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SocialMediaPlatforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SocialMediaPlatforms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/SocialMediaPlatforms/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/api/SocialMediaPlatforms/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SocialMediaPlatforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SocialMediaPlatforms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "/api/SocialMediaPlatforms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Youtube\",\n  \"iconPath\": \"string\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/SocialMediaPlatforms",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"SocialMediaPlatforms"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"iconPath\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"visibility\": \"<boolean>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SocialMediaPlatforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "isimsizmedyaeklemekontrolü",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//İsimsiz medya platformu ekleme kontrolü yapılmıştır.\n// 'Name' boş olmamalı.Uyarısı dönmektedir ve kayıt gerçekleşmemektedir.\n{\n  \"name\": \"\",\n  \"iconPath\": \"string\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/SocialMediaPlatforms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/SocialMediaPlatforms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"name\": \"Instagram\",\n  \"iconPath\": \"string\",\n  \"priority\": 1,\n  \"visibility\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/SocialMediaPlatforms",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"SocialMediaPlatforms"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"iconPath\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"visibility\": \"<boolean>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bypassCache\": \"<boolean>\",\n  \"cacheKey\": \"<string>\",\n  \"cacheGroupKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SocialMediaPlatforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/SocialMediaPlatforms",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/SocialMediaPlatforms?PageIndex=0&PageSize=20",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"SocialMediaPlatforms"
							],
							"query": [
								{
									"key": "PageIndex",
									"value": "0"
								},
								{
									"key": "PageSize",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/SocialMediaPlatforms?PageIndex=<integer>&PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SocialMediaPlatforms"
									],
									"query": [
										{
											"key": "PageIndex",
											"value": "<integer>"
										},
										{
											"key": "PageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	]
}