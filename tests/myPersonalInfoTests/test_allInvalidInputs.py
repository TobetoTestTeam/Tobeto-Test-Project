# Test Senaryosunun Adı: Profil Bilgileri altında kişisel bilgilerin güncellenme kontrolleri 
# Test Case3: Başarısız kişisel bilgi ekleme/güncelleme kontrolü (Boş bırakıldığında)
# Test Case6: Ülke karakter sayısı uyarısı kontrolü
# Test Case7: “Mahalle/Sokak” ve “Hakkımda” alanları karakter sayısı uyarısı kontrolü

# Profil Bilgileri -> Kişisel Bilgilerim Sayfası 
# https://tobeto.com/profilim/profilimi-duzenle/kisisel-bilgilerim

# Generated by Selenium IDE
from selenium.webdriver.common.keys import Keys

import tests.loginTests.test_validLogin as login
from pages.my_personal_info_page import MyPersonalInfoPage
from time import sleep

class TestAllInvalidInputs():
  def setup_method(self):
    # as a precondition user should be logged in
    valid_login = login.TestvalidLogin() 
    valid_login.setup_method()
    valid_login.test_validLogin()
    self.driver = valid_login.getDriver()
    
    self.driver.delete_all_cookies
    self.vars = {}
   
  def teardown_method(self):
    self.driver.quit()
  
  #@pytest.mark.skip()
  def test_allInvalidInputs(self):
    self.driver.get("https://tobeto.com/profilim/profilimi-duzenle/kisisel-bilgilerim")

    # TEST CASE 3: DOLDURULMASI ZORUNLU ALAN KONTROLÜ
    first_name = MyPersonalInfoPage.get_firstname_element(self)
    first_name.click()
    first_name.clear()

    last_name = MyPersonalInfoPage.get_lastname_element(self)
    last_name.click()
    last_name.clear()

    phone_number = MyPersonalInfoPage.get_phoneNumber_element(self)
    phone_number.click()
    sleep(5)
    phone_number.clear()
    phone_number.send_keys(Keys.CONTROL + "a") 
    phone_number.send_keys(Keys.DELETE)
    sleep(5)

    birthday = MyPersonalInfoPage.get_birthday_element(self)
    birthday.click()

    identification_number = MyPersonalInfoPage.get_identificationNumber_element(self)
    identification_number.click()
    identification_number.clear()

    self.driver.execute_script("window.scrollTo(0,document.body.scrollHeight)")
    sleep(2)
    save_button = MyPersonalInfoPage.get_saveButton_element(self)
    #save_button.click()
    self.driver.execute_script("arguments[0].click();", save_button)
    
    self.driver.execute_script("window.scrollTo(0,0)")
    sleep(5)
    first_name_alert_message = MyPersonalInfoPage.get_userNameAlertMessage_element(self)
    assert first_name_alert_message.text == "Doldurulması zorunlu alan*"
    
    last_name_alert_message = MyPersonalInfoPage.get_lastnameAlertMessage_element(self)
    assert last_name_alert_message.text == "Doldurulması zorunlu alan*"
    
    phone_number_alert_message = MyPersonalInfoPage.get_phoneNumberAlertMessage_element(self)
    assert phone_number_alert_message.text == "Doldurulması zorunlu alan*"
    
    birthday_alert_message = MyPersonalInfoPage.get_birthdayAlertMessage_element(self)
    assert birthday_alert_message.text == "Doldurulması zorunlu alan*"
    
    identification_alert_message = MyPersonalInfoPage.get_identificationAlertMessage_element(self)
    assert identification_alert_message.text == "Aboneliklerde fatura için doldurulması zorunlu alan"
    
    country_alert_message = MyPersonalInfoPage.get_countryAlertMessage_element(self)
    assert country_alert_message.text == "Doldurulması zorunlu alan*"
    
    city_alert_message = MyPersonalInfoPage.get_cityAlertMessage_element(self)
    assert city_alert_message.text == "Doldurulması zorunlu alan*"
    
    district_alert_message = MyPersonalInfoPage.get_countryAlertMessage_element(self)
    assert district_alert_message.text == "Doldurulması zorunlu alan*"
    
    # TEST CASE 6: Ülke girdisi kontrol
    self.driver.execute_script("window.scrollTo(0,document.body.scrollHeight)")
    sleep(2)
    country = MyPersonalInfoPage.get_country_element(self)
    country.click()
    country.send_keys("T")
    country_alert_message = MyPersonalInfoPage.get_countryAlertMessage_element(self)
    assert country_alert_message.text == "En az 2 karakter girmelisiniz"
    sleep(5)
    self.driver.execute_script("window.scrollTo(0,document.body.scrollHeight)")
    country.click()
    country.clear()
    country.send_keys("Türkiye Türkiyeeeeeeeeeeeeeeeeeeeeeeee")
    country_alert_message = MyPersonalInfoPage.get_countryAlertMessage_element(self)
    assert country_alert_message.text == "En fazla 30 karakter girebilirsiniz"
    
    
    # TEST CASE 7: "Mahalle/Sokak" ve "Hakkımda" girdi kontrol
    address = MyPersonalInfoPage.get_address_element(self)
    address.send_keys("mahallllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll")
    address_alert_message = MyPersonalInfoPage.get_addressAlertMessage_element(self)
    assert address_alert_message.text == "En fazla 200 karakter girebilirsiniz"
    
    about = MyPersonalInfoPage.get_about_element(self)
    about.send_keys("hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh")
    about_alert_message = MyPersonalInfoPage.get_aboutAlertMessage_element(self)
    assert about_alert_message.text == "En fazla 300 karakter girebilirsiniz"
    sleep(5)
    self.driver.execute_script("window.scrollTo(0,296)")